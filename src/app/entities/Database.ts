import { Space } from "./Space";
import { Topic } from "./Topic";
import { Knowledge } from "./Knowledge";

export class Database {
  spacesList: Space[] = [
    new Space(1, 'General', '', '#FF9800'),
    new Space(2, 'Wellbeing', 'Work related', '#322172')
  ];

  topicsList: Topic[] = [
    new Topic(1, 'Econsent', '', 2),
    new Topic(2, 'Stratus', '', 2),
    new Topic(3, 'Releases', '', 2),
    new Topic(4, 'Database', '', 2),
    new Topic(5, 'Other', '', 2),
  ];

  knowledgeList: Knowledge[] = [
    new Knowledge(1, 'Clear Eforms forms', 'Clear Eforms forms', '<p>delete from rich_form_release_form_release where 1 = 1;<br>delete from decorator_release where 1 = 1;<br>delete from decorator where 1 = 1;<br>delete from rich_form_form_release where 1 = 1;<br>delete from rich_form_release where 1 = 1;<br>delete from rich_form where 1 = 1;<br>delete from form_release_status where 1 = 1;<br>delete from form_data_point_release where 1 = 1;<br>delete from form_data_point where 1 = 1;<br>delete from form_column_release where 1 = 1;<br>delete from form_column where 1 = 1;<br>delete from form_release_tag where 1 = 1;<br>delete from form_release where 1 = 1;<br>delete from form where 1 = 1;<br>delete from data_point_release_status where 1 = 1;<br>delete from data_point_release_tag where 1 = 1;<br>delete from data_point_tag where 1 = 1;<br>delete from data_point_validation_release where 1 = 1;<br>delete from data_point_validation where 1 = 1;<br>delete from data_point_release where 1 = 1;<br>delete from data_point where 1 = 1;<br>delete from data_source_release_tag where 1 = 1;<br>delete from data_source_tag where 1 = 1;<br>delete from data_source_release_status where 1 = 1;<br>delete from data_source_item_release where 1 = 1;<br>delete from data_source_item where 1 = 1;<br>delete from data_source_release where 1 = 1;<br>delete from data_source where 1 = 1;</p>', 4),
    new Knowledge(9, 'Connect to PostGres DB', 'Connect to PostGres DB', `<p>sudo -i -u postgres<br>psql</p>`, 4),

    new Knowledge(2, 'TOMCAT server location', 'TOMCAT location', `<p>/home/auser/servers</p>`, 2),
    new Knowledge(3, 'TOMCAT server config file location', 'TOMCAT config file localtion', `<p>/home/auser/servers/apache-tomcat-7.0.90/conf/context.xml</p>`, 2),
    new Knowledge(4, 'NGINX config file', 'NGINX config file', `<p># THis is the config for viper test<br>server {<br>&nbsp; &nbsp; listen 80;<br>&nbsp; &nbsp; location /jadmin {<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Host $http_host;<br>&nbsp; &nbsp; &nbsp; &nbsp; access_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/log/nginx/access-stratus-ssl.log;<br>&nbsp; &nbsp; &nbsp; &nbsp; error_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /var/log/nginx/error-stratus-ssl.log &nbsp; &nbsp; debug;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_pass &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://jadmin;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; # API end point<br>&nbsp; &nbsp; location /nimbus/services {<br>&nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; &nbsp;rewrite nimbus\/(\w+\.?.*$) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/$1 break;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Accept &nbsp; application/json;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Host $http_host;<br>&nbsp; &nbsp; &nbsp; &nbsp; access_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/log/nginx/access-nimbus-ssl.log;<br>&nbsp; &nbsp; &nbsp; &nbsp; error_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /var/log/nginx/error-nimbus-ssl.log &nbsp; &nbsp; debug;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_pass &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://cirrus;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; location /nimbus {<br>&nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; &nbsp;rewrite nimbus\/(\w+\.?.*$) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/$1 break;<br>&nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; &nbsp;proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Accept &nbsp; application/json;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Host $http_host;<br>&nbsp; &nbsp; &nbsp; &nbsp; access_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/log/nginx/access-nimbus-ssl.log;<br>&nbsp; &nbsp; &nbsp; &nbsp; error_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /var/log/nginx/error-nimbus-ssl.log &nbsp; &nbsp; debug;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_pass &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://cirrus;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; location /stratus/ {<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Host $http_host;<br>&nbsp; &nbsp; &nbsp; &nbsp; access_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/log/nginx/access-stratus-ssl.log;<br>&nbsp; &nbsp; &nbsp; &nbsp; error_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /var/log/nginx/error-stratus-ssl.log &nbsp; &nbsp;debug;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_pass &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://stratus;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; location /nimbusindexing/ {<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Host $http_host;<br>&nbsp; &nbsp; &nbsp; &nbsp; access_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/log/nginx/access-stratus-ssl.log;<br>&nbsp; &nbsp; &nbsp; &nbsp; error_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /var/log/nginx/error-stratus-ssl.log &nbsp; &nbsp;debug;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_pass &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://localhost:7777;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; location / {<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header &nbsp; &nbsp; &nbsp; &nbsp;Host $http_host;<br>&nbsp; &nbsp; &nbsp; &nbsp; access_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/log/nginx/access-stratusdev-ssl.log;<br>&nbsp; &nbsp; &nbsp; &nbsp; error_log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /var/log/nginx/error-stratusdev-ssl.log &nbsp; &nbsp;debug;<br>&nbsp; &nbsp; &nbsp; &nbsp; proxy_pass &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://stratusdev;<br>&nbsp; &nbsp; }<br>}<br>&nbsp;</p>`, 2),
    new Knowledge(5, 'Linux hosts file location', 'Linux hosts file', `<p>sudo gedit /etc/hosts</p>`, 2),
    new Knowledge(6, "Stratus URL's", "Stratus URL's", `<p>stratus super: http://vm.vipdev/<br>Stratus new (angular) - http://vm.vipdev/jadmin/#/<br>stratus debug classic: http://vm.vipdev/index.html?gwt.codesvr=127.0.1.1:9997</p>`, 2),
    new Knowledge(7, 'Nimbus pickup folder', 'Nimbus pickup folder', `<p>/var/viper/filepickup/inbox</p>`, 2),
    new Knowledge(8, 'Setup Stratus', 'Setup Stratus', `<p><strong>SETUP STRATUS</strong><br>&nbsp; &nbsp; * /home/auser/servers/apache-tomcat-7.0.90-stratus -&gt; this is the server that runs Stratus. All the configs in this are on the Stratus project<br>&nbsp; &nbsp; * stratus classic debug config requires FireFox 24 or 26 to work</p><p>&nbsp; &nbsp; - change the ip address on /home/auser/servers/apache-tomcat-7.0.90/conf/context.xml to point to my local database NIMBUSDB<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;Parameter name="url" override="true" value="jdbc:postgresql://vm.vipdev:5432/nimbusdb"/&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;Parameter name="username" override="true" value="oneconnect"/&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;Parameter name="password" override="true" value="oneconnect"/&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;Parameter name="cas.serviceId" value="http://vm.vipdev/nimbusindexing" override="false"/&gt;<br>&nbsp;<br>&nbsp; &nbsp; - setup hosts file to contain<br>&nbsp; &nbsp; &nbsp; &nbsp; 127.0.0.1 &nbsp; localhost &nbsp; vm.vipdev<br>&nbsp; &nbsp; &nbsp; &nbsp; 127.0.0.1 &nbsp; localhost &nbsp; stratusdev<br>&nbsp; &nbsp; &nbsp; &nbsp; 127.0.0.1 &nbsp; localhost &nbsp; cirrus<br>&nbsp; &nbsp; &nbsp; &nbsp; 127.0.0.1 &nbsp; localhost &nbsp; nimbus</p><p>&nbsp; &nbsp; - setup NGINX configs at<br>&nbsp; &nbsp; &nbsp; &nbsp; /etc/nginx/sites-available/viper.conf<br>&nbsp; &nbsp; &nbsp; &nbsp; sudo systemctl restart nginx</p><p>&nbsp; &nbsp; - on IntelliJ, create new Run/Debug configs<br>&nbsp; &nbsp; &nbsp; &nbsp; righ-click on the main pom.xml file -&gt; maven -&gt; generate sources and update folders</p><p>&nbsp; &nbsp; - Maven<br>&nbsp; &nbsp; &nbsp; &nbsp; name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : gwt-prebuild<br>&nbsp; &nbsp; &nbsp; &nbsp; working directory: /home/auser/workspace/viper &nbsp; (the folder where the project is located)<br>&nbsp; &nbsp; &nbsp; &nbsp; command line &nbsp; &nbsp; : clean package -Dmaven.test.skip=true -Pprod,release-version -Denv=prod<br>&nbsp; &nbsp;<br>&nbsp; &nbsp; - Spring Boot<br>&nbsp; &nbsp; &nbsp; &nbsp; name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : CirrusApplication<br>&nbsp; &nbsp; &nbsp; &nbsp; main class &nbsp; &nbsp; : com.ehealthinnovations.cirrus.CirrusApplication<br>&nbsp; &nbsp; &nbsp; &nbsp; active profiles: swagger,dev,jose</p><p>&nbsp; &nbsp; - Tomcat Server<br>&nbsp; &nbsp; &nbsp; &nbsp; Server tab<br>&nbsp; &nbsp; &nbsp; &nbsp; name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: Nimbus<br>&nbsp; &nbsp; &nbsp; &nbsp; application server: Tomcat 7.0.90<br>&nbsp; &nbsp; &nbsp; &nbsp; URL &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : http://localhost:7777/nimbusindexing<br>&nbsp; &nbsp; &nbsp; &nbsp; VM options &nbsp; &nbsp; &nbsp; &nbsp;: -Xms1g -Xmx10G<br>&nbsp; &nbsp; &nbsp; &nbsp; HTTP port &nbsp; &nbsp; &nbsp; &nbsp; : 7777<br>&nbsp; &nbsp; &nbsp; &nbsp; JMX port &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: 1097<br>&nbsp; &nbsp; &nbsp; &nbsp; before launch &nbsp; &nbsp; : build 'nimbus:war exploded' artifact<br>&nbsp; &nbsp; &nbsp; &nbsp; Deployment tab<br>&nbsp; &nbsp; &nbsp; &nbsp; Deploy at the server startup: nimbus:war exploded<br>&nbsp; &nbsp; &nbsp; &nbsp; Application context: /nimbusindexing</p><p>&nbsp; &nbsp; - GWT Configuration<br>&nbsp; &nbsp; &nbsp; &nbsp; name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : stratus debug super<br>&nbsp; &nbsp; &nbsp; &nbsp; module &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; GWT modules to load: all<br>&nbsp; &nbsp; &nbsp; &nbsp; VM options &nbsp; &nbsp; &nbsp; &nbsp; : -Xmx4g -Dstratus.properties.profile=cdm<br>&nbsp; &nbsp; &nbsp; &nbsp; Dev mode parameters: -bindAddress 0.0.0.0</p><p>&nbsp; &nbsp; &nbsp; &nbsp; name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : stratus debug classic<br>&nbsp; &nbsp; &nbsp; &nbsp; module &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; GWT modules to load: net.cloud21.stratus.Stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; VM options &nbsp; &nbsp; &nbsp; &nbsp; : -Xmx4g -Dstratus.properties.profile=cdm<br>&nbsp; &nbsp; &nbsp; &nbsp; Dev mode parameters: -bindAddress 0.0.0.0</p><p>&nbsp; &nbsp; - in IntelliJ -&gt; file -&gt; project structure &gt; modules<br>&nbsp; &nbsp; &nbsp; &nbsp; - click stratus with you second button and add GWT<br>&nbsp; &nbsp; &nbsp; &nbsp; GWT<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path to GWT installation directory: /home/auser/gwt-2.8.2<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target web facet: web<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; javascript output style: Detailed<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Compiler maximun heap size: 1024<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; list GWT Module | Output Relative Path<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; net.cloud21.stratus.StratusJUnit &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| /net.cloud21.stratus.StratusJUnit<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; net.cloud21.stratus.Stratus &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | /viper<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; net.cloud21.stratus.FormFactor &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| /net.cloud21.stratus.FormFactor<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; com.reveregroup.gwt.imagepreloader.ImagePreloader | /gwt_image_preloader<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; org.gwt.contentflow4gwt.contentflow4gwt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | /org.gwt.contentflow4gwt.contentflow4gwt<br>&nbsp; &nbsp; &nbsp; &nbsp; * the order doesn't matter<br>&nbsp; &nbsp; &nbsp; &nbsp; * the GWT compoiler is not included in an artifact warning doesn't matter as well<br>&nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; - under facets add a GWT (stratus)<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path to GWT installation directory: /home/auser/gwt-2.8.2<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target web facet: web<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; javascript output style: Detailed<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Compiler maximun heap size: 1024<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; list GWT Module | Output Relative Path<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; net.cloud21.stratus.StratusJUnit &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| /net.cloud21.stratus.StratusJUnit<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; net.cloud21.stratus.Stratus &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | /viper<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; net.cloud21.stratus.FormFactor &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| /net.cloud21.stratus.FormFactor<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; com.reveregroup.gwt.imagepreloader.ImagePreloader | /gwt_image_preloader<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; org.gwt.contentflow4gwt.contentflow4gwt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | /org.gwt.contentflow4gwt.contentflow4gwt<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * the order doesn't matter<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * the GWT compoiler is not included in an artifact warning doesn't matter as well</p><p>&nbsp; &nbsp; - run gwt-prebuild to compoile all the stuff</p><p>&nbsp; &nbsp; - install FireFox 26.0 (firefox-26.0.tar.bz2)<br>&nbsp; &nbsp; - create an alias for firefox 26<br>&nbsp; &nbsp; &nbsp; &nbsp; sudo gedit ~/.bashrc and add alias ff26='~/workspace/firefox26/firefox' (path to where you extracted the firefox folder)<br>&nbsp; &nbsp; - download and install GWT plugin for firefox 26 on https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/google-web-toolkit/gwt-dev-plugin-1.26-rc1.xpi<br>&nbsp; &nbsp; &nbsp; &nbsp; add this configs in the plugin:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Include vm.vipdev 127.0.1.1<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Include vm.vipdev 192.168.44.30<br>&nbsp; &nbsp; &nbsp; &nbsp; * So firefox is used with the GWT plugin, This is an outdated way of running the code. This is the only way you can get Status debug classic working. (This is Tom preference)<br>&nbsp; &nbsp; &nbsp; &nbsp; * But you can also run stratus in any browser using stratus debug super</p><p>&nbsp; &nbsp; &nbsp;- on viper/admin2-dev/src/environments/environment.jose.ts<br>&nbsp; &nbsp; &nbsp; &nbsp; export const environment = {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; production: false,<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cirrus_api: 'http://vm.vipdev/nimbus'<br>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; - on viper/cirrus/rc/main/resources/application-jose.properties<br>&nbsp; &nbsp; &nbsp; &nbsp; spring.datasource.url = jdbc:postgresql://192.168.44.30:5432/nimbusdb<br>&nbsp; &nbsp; &nbsp; &nbsp; allow.origin = http://vm.vipdev:4200<br>&nbsp; &nbsp; &nbsp; &nbsp; cas.autoserviceId = http://vm.vipdev/nimbus</p><p>&nbsp; &nbsp; - on viper/admin2-dev/package.json<br>&nbsp; &nbsp; &nbsp; &nbsp; add under "scripts"<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "devjordan": "ng serve -c jordan --host vm.vipdev --base-href=/jadmin/",</p><p>&nbsp; &nbsp; - check the dbURL config on the nimbusDb<br>&nbsp; &nbsp; &nbsp; &nbsp; * applicationconfiguration is the table that holds stratus project configs<br>&nbsp; &nbsp; &nbsp; &nbsp; select parametername, parametervalue from applicationconfiguration<br>&nbsp; &nbsp; &nbsp; &nbsp; select parametername, parametervalue from nimbusdb.applicationconfiguration where parametername='jpa.dbURL'<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jpa.dbURL should have jdbc:postgresql://localhost:5432/nimbusdb as the value</p><p>&nbsp; &nbsp; - run CirrusApplication</p><p>&nbsp; &nbsp; - run 'npm i' and 'sudo npm run devjordan' in order to start the angular project (gwt-prebuild has to be ran before this)<br>&nbsp; &nbsp; &nbsp; &nbsp; access it via http://vm.vipdev/jadmin/#/<br>&nbsp;<br>&nbsp; &nbsp; - run nimbus and login into CAS with&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; user: test.user<br>&nbsp; &nbsp; &nbsp; &nbsp; pass: i2Mansfield</p><p>&nbsp; &nbsp; - to test nimbus indexing:<br>&nbsp; &nbsp; &nbsp; &nbsp; get a PDF file from viper/site-config/Dev/pdf/TerJones and place it into /var/viper/filepickup/inbox (pickup folder)<br>&nbsp; &nbsp; &nbsp; &nbsp; * if you put a copy of one of the files in there then nimbus will pickup the file and add it the the DB<br>&nbsp; &nbsp; &nbsp; &nbsp; * Then it will be available in the application<br>&nbsp; &nbsp; &nbsp; &nbsp; * Take note the name of the file is used to assign &nbsp;the &nbsp;patientId and a category "2006000002_Anaesthetic+Records+and+Consent_Operation+Notes.pdf"<br>&nbsp; &nbsp; &nbsp; &nbsp; * after nimbus pickups the file, it will disappear from the pickup folder</p><p>&nbsp; &nbsp; &nbsp; &nbsp; to see the file:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; on http://vm.vipdev:4200/jadmin/#, click in Search, then use the file's name number (2006000002 is the patient id) as the criteria</p><p>&nbsp; &nbsp; - old stratus (stratus super)<br>&nbsp; &nbsp; &nbsp; &nbsp; - place this file on /viper/stratus/src/main/resources/stratus-cdm.properties<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Hostname for the nimbus instance responsible for service requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.service.host=vm.vipdev<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Port for the nimbus instance responsible for service requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.service.port=<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Whether to use HTTPS for the nimbus instance responsible for service requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.service.ssl=false<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Base URL path for the nimbus instance responsible for service requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.service.ctxPath=/nimbus/services/<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Hostname for the nimbus instance responsible for resource requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.resource.host=vm.vipdev<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Port for the nimbus instance responsible for resource requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.resource.port=<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Whether to use HTTPS for the nimbus instance responsible for resource requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.resource.ssl=false<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Base URL path for the nimbus instance responsible for resource requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.resource.ctxPath=/nimbus/resources/<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Hostname for the nimbus instance responsible for document text search requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.docTextSearch.host=vm.vipdev<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Port for the nimbus instance responsible for document text search requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.docTextSearch.port=<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Whether to use HTTPS for the nimbus instance responsible for document text search requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.docTextSearch.ssl=false<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Base URL path for the nimbus instance responsible for document text search requests<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.docTextSearch.ctxPath=/nimbus/services/<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Whether to display the checkbox for offline mode on login - This is an old unused property<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.offlinemode.enabled=false<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Which skin (CSS rules) to use - default stratus-01<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; skin=stratus-01<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Time in milliseconds for HTTP connection timeout for Java side of Stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.connection.timeout=10000<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Time in milliseconds for HTTP socket timeout for Java side of Stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.connection.socket.timeout=30000<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Max connections in pool for HTTP requests to Nimbus from Java side of Stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.connection.maxtotalconnections=2000<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Max connections per unique host for HTTP requests to Nimbus from Java side of Stratus<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nimbus.connection.maxconnectionsperhost=2000<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #URL of the CAS Server<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cas.serverUrl=https://cas.e-healthinnovations.com/cas<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #Service ID of the application for use with CAS<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cas.serviceId=http://vm.vipdev/<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Will only show these properties from the metadata if disabled will display nothing from the metadata<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; metadata.whitelist=clinician,speciality,location,document creator,document date<br>&nbsp; &nbsp; &nbsp;​<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; help.url=https://cloud.hssnet.com/training/<br>&nbsp; &nbsp; - run stratus debug super<br>&nbsp; &nbsp; - access it via http://vm.vipdev/<br>&nbsp;</p>`, 2),

    new Knowledge(10, 'Create a new release', 'Create a new release', `<p>repository &gt; tags<br>create new version (with RC1 for the tests)</p><p>wellbeing RN and TCR docs for the release</p><p>devweb<br>&nbsp;automation test importer<br>&nbsp; &nbsp;create tests<br>&nbsp;release information<br>&nbsp;select project<br>&nbsp;select release version<br>&nbsp;add a release cycle<br>&nbsp; &nbsp;use tests created before<br>&nbsp;generate</p><p>&nbsp;generate the text. the right handside one is for TCR (Word macro and paste it)<br>&nbsp;the text on the lefthand side is for the RN word document</p>`, 3),
    new Knowledge(11, 'Create CI pipeline on GitLab', 'Create CI pipeline', `<p>create a .gitlab-ci.yml file on project root<br>&nbsp; &nbsp; &nbsp; &nbsp;stages:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- frontend<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- compile-code<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- docker-build<br>&nbsp; &nbsp; &nbsp; &nbsp;frontend:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;image: hssdev1a:5000/wellbeing/node:stable<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;stage: frontend<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tags:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; - obsvis-1-docker-runner<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;script:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- cd app<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- npm install<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- npm run test:ci<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- npm run build:prod<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;artifacts:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;paths:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- src/main/resources/static<br>&nbsp; &nbsp; &nbsp; &nbsp;compile-code:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;stage: compile-code<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;image: maven:3.3.9<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tags:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; - obsvis-1-docker-runner<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;script:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- mvn clean package test -B<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;artifacts:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;paths:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- target/evoforms.jar<br>&nbsp; &nbsp; &nbsp; &nbsp;#docker-build:<br>&nbsp; &nbsp; &nbsp; &nbsp;# &nbsp;tags:<br>&nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; &nbsp;- shell<br>&nbsp; &nbsp; &nbsp; &nbsp;# &nbsp;stage: docker-build<br>&nbsp; &nbsp; &nbsp; &nbsp;# &nbsp;script:<br>&nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; &nbsp;- docker build . -t hssdev1a:5000/wellbeing/obsvis<br>&nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; &nbsp;- docker push hssdev1a:5000/wellbeing/obsvis<br>&nbsp;</p><p>create a Dockerfile on project root<br>&nbsp; &nbsp; &nbsp; &nbsp;FROM openjdk:8-alpine<br>&nbsp; &nbsp; &nbsp; &nbsp;COPY target/evoforms.jar .<br>&nbsp; &nbsp; &nbsp; &nbsp;EXPOSE 8080<br>&nbsp; &nbsp; &nbsp; &nbsp;CMD ["java","-jar","obsvis.jar"]<br>&nbsp;</p><p>on angular.json file<br>&nbsp; &nbsp;"outputPath": "../src/main/resources/static",<br>&nbsp;</p><p>&nbsp;on package.json add these two scripts<br>&nbsp; &nbsp;"build:prod": "ng build --prod",<br>&nbsp; &nbsp;"test:ci": "ng test --browsers Chrome_without_security"<br>&nbsp;</p><p>&nbsp;on karma.conf.js add<br>&nbsp; &nbsp;customLaunchers: {<br>&nbsp; &nbsp; &nbsp;Chrome_without_security: {<br>&nbsp; &nbsp; &nbsp; &nbsp;base: 'ChromiumHeadless',<br>&nbsp; &nbsp; &nbsp; &nbsp;flags: ['--no-sandbox']<br>&nbsp; &nbsp; &nbsp;}<br>&nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp;singleRun: true,</p>`, 5),
    new Knowledge(12, 'Change DSL renderer and build it', 'Changing DSL renderer', `<ol><li>change something on a file inside the DSL folder</li><li>npm run build&nbsp;</li><li>npm pack (this will generate a tgz file)</li><li>on the app folder: npm i 'path.to.tgz file'</li><li>when finished, it is necessary to publish this package</li><li>change the version number on dsl/package.json</li><li>npm publish on dsl folder</li><li>npm pack on dsl folder</li><li>change the version number of the tgz file on app/package.json</li><li>when on local it will be "@wellbeing/dsl": "file:../dsl/wellbeing-dsl-0.2.1.tgz"</li><li>when pushing it: "@wellbeing/dsl": "0.2.1"</li><li>npm i 'path.to.tgz file' on app folder to get the latest changes</li></ol>`, 1),
    new Knowledge(13, 'Serve DSL editor', 'Serve DSL editor', `<p>npm i http-server -g (install http-server from Node globally) (https://stackoverflow.com/questions/38497334/how-to-run-html-file-on-localhost)<br>go to dsl-editor folder<br>&nbsp; &nbsp; http-server (to set specific port: -p portNumber)<br>&nbsp; &nbsp; if theres an error (https://stackoverflow.com/questions/16460163/ps1-cannot-be-loaded-because-the-execution-of-scripts-is-disabled-on-this-syste)<br>&nbsp; &nbsp; &nbsp; &nbsp; open cmd as administrator and run Set-ExecutionPolicy Unrestricted, then run http-server again</p>`, 1),
    new Knowledge(14, 'Edit DSL editor', 'Edit DSL editor', `<p>after editing</p><p>&nbsp; &nbsp; npm run build<br>&nbsp;</p><p>if something on the dsl folder was changed then<br>&nbsp; &nbsp; npm i tgz file<br>&nbsp; &nbsp; npm run build<br>&nbsp; &nbsp; http-server</p><p>when edited something<br>&nbsp; &nbsp; dsl folder edit something<br>&nbsp; &nbsp; &nbsp; &nbsp; npm run build<br>&nbsp; &nbsp; &nbsp; &nbsp; npm pack (will generate the tgz file)<br>&nbsp; &nbsp; go to dsl-editor folder<br>&nbsp; &nbsp; &nbsp; &nbsp; npm i the tgz file<br>&nbsp; &nbsp; &nbsp; &nbsp; then run the serve and see the changes on localhost:8000</p><p>&nbsp;the DSL itself<br>&nbsp; &nbsp; dsl/FDSL.g4 file</p>`, 1),
    new Knowledge(15, 'Using Antl', 'Using Antl', `<p>has to be done in Linux<br><br>download antlr jar files<br>&nbsp; &nbsp; antlr4-4.7.2-complete.jar<br>&nbsp; &nbsp; put the jar file into /usr/local/lib/antlr/<br><br>add aliases on bash<br>&nbsp; &nbsp; gedit ~/.bashrc<br>&nbsp; &nbsp; add<br>&nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH='.:/usr/local/lib/antlr/antlr4-4.7.2-complete.jar:$CLASSPATH'<br>&nbsp; &nbsp; &nbsp; &nbsp; alias antlr4='java -Xmx500M -cp "/usr/local/lib/antlr/antlr4-4.7.2-complete.jar:$CLASSPATH" org.antlr.v4.Tool'<br>&nbsp; &nbsp; &nbsp; &nbsp; alias grun='java org.antlr.v4.gui.TestRig'<br>&nbsp; &nbsp; . ~/.bashrc<br>&nbsp;<br>to run antlr<br>&nbsp; &nbsp; go to the dsl folder (folder that has FDSL.g4 file)<br>&nbsp; &nbsp; antlr4 -Dlanguage=JavaScript FDSL.g4 or sudo java -Xmx500M -cp "/usr/local/lib/antlr/antlr4-4.7.2-complete.jar:$CLASSPATH" org.antlr.v4.Tool -Dlanguage=JavaScript FDSL.g4<br>&nbsp; &nbsp; then copy the contents from the files that have been generated into the files inside lang folder</p><p>&nbsp; &nbsp; for JAVA dsl<br>&nbsp; &nbsp; &nbsp; &nbsp; run antlr4 FDSL.g4<br>&nbsp; &nbsp; &nbsp; &nbsp; copy the contents from the generated files into fdsl-parser/src/main/java/.../<br>&nbsp; &nbsp; &nbsp; &nbsp; keep package com.wellbeingsoftware.dsl.generated; at the top of the files</p>`, 1),
    new Knowledge(16, 'Run OrderComms project', 'Run OrderComms project', `<p>frontend/.npmrc file<br>&nbsp; &nbsp; package-lock=false<br>&nbsp; &nbsp; registry=http://jexus.wsg.local:8081/nexus/repository/npm-group/<br>&nbsp; &nbsp; _auth=YWRtaW46YWRtaW4xMjM=<br>&nbsp; &nbsp; always-auth=true<br>&nbsp; &nbsp; scripts-prepend-node-path=true<br><br>if an error with docker db happens<br>&nbsp; &nbsp; docker-compose -f ordercomms-compose.yml down<br>&nbsp; &nbsp; docker volume ls<br>&nbsp; &nbsp; docker volume rm ordercomms-app_postgres</p>`, 5),
    new Knowledge(17, 'Use LazyDocker', 'Use LazyDocker', `<p>On project's folder (the folder that has the docker file) run:<br>&nbsp; &nbsp; lazydocker</p>`, 5),
    new Knowledge(18, 'Create local DB', 'Create local DB', `<p>start postgres on lazydocker<br><br>if needed, change the public port<br>&nbsp; &nbsp; ports:<br>&nbsp; &nbsp; &nbsp; &nbsp; - 5433:5432<br><br>application.properties<br>&nbsp; &nbsp; use localhost:5433, user/pass = postgres<br>&nbsp; &nbsp; spring.flyway.enabled=true<br>connect to the postgres from docker and run the data.sql file<br>&nbsp; &nbsp; psql -U postgres -h localhost -p 5433 econsent &lt; /home/auser/workspace/econsent/econsent-core/src/main/resources/db/migration/data.sql</p>`, 1),
    new Knowledge(19, 'Fix ng serve error', 'Fix ng serve error', `<p>run:<br>&nbsp; &nbsp; alias ng="/usr/local/lib/node_modules/@angular/cli/bin/ng"</p>`, 1),
    new Knowledge(20, 'Recreate Docker DB', 'Recreate Docker DB', `<p>delete the existing one<br>&nbsp; &nbsp; on lazydocker stop the container (s)<br>&nbsp; &nbsp; then d and remove with volumes<br><br>then shift + r and recreate<br><br>create the econsent schema on the econsent db<br>&nbsp; &nbsp; CREATE schema econsent;<br><br>run the project migrations<br>&nbsp; &nbsp; run the data.sql<br>&nbsp; &nbsp; &nbsp; &nbsp; psql -U postgres -h localhost -p 5433 econsent &lt; /home/auser/workspace/econsent/econsent-core/src/main/resources/db/migration/data.sql<br>&nbsp; &nbsp; &nbsp; &nbsp; psql -U postgres -h localhost -p 5433 econsent &lt; /home/auser/workspace/econsent/econsent-core/src/main/resources/db/migration/searchpath.sql<br>&nbsp; &nbsp; &nbsp; &nbsp; psql -U postgres -h localhost -p 5433 econsent &lt; /home/auser/workspace/econsent/econsent-core/src/main/resources/db/migration/securitypermissions.sql<br><br>run the project again</p>`, 1),
    new Knowledge(21, 'Recreate Docker DB for EvoForms', 'Recreate Docker DB for EvoForms', `<p>delete the existing one<br>&nbsp; &nbsp; on lazydocker stop the container (s)<br>&nbsp; &nbsp; then d and remove with volumes<br><br>then shift + r and recreate<br><br>run the project so the migrations are run</p>`, 5),
    new Knowledge(22, 'Test security permissions', 'Test security permissions', `<p>remove the dev profile when starting the project on IntelliJ</p>`, 1),
    new Knowledge(23, 'Change Node version on the VM', 'Change Node version on the VM', `<p>check all the versions available<br>&nbsp; &nbsp; nvm ls<br><br>choose one to be used<br>&nbsp; &nbsp; nvm use v10.16.3</p>`, 5),
    new Knowledge(24, 'Generate new Client API for EvoForms', 'Generate new Client API for EvoForms', `<p>on terminal, navigate to evo-forms project folder (where the gen_client.sh file is located at) and run<br>&nbsp; &nbsp; sudo sh gen_client.sh<br><br>this will generate the new version.&nbsp;<br><br>Then let IntelliJ index the new files and then navigate to the client api project folder and run<br>&nbsp; &nbsp; sudo npm run build<br><br>navigate to dist folder and run<br>&nbsp; &nbsp; npm pack<br><br>then on the angular app folder run<br>&nbsp; &nbsp; npm i name_of_the_generated_package</p>`, 5),
    new Knowledge(25, 'Build Docker environment for specific branch', 'Build Docker for specific branch', `<p>on the docker-compose file, at image<br>&nbsp; &nbsp; image: econsent-1.wsg.local:5000/econsent-core:ECON-1097</p>`, 5),
    new Knowledge(26, 'Deploy FORM_BUILDER_CLIENT', 'Deploy FORM_BUILDER_CLIENT', `<p>after making the changes on the project, run this on the folder that has the gen_java_client.sh<br>&nbsp; &nbsp; sudo sh gen_java_client.sh<br><br>this will generate the new client. Then it is needed to deploy this package to Maven<br>&nbsp; &nbsp; on Maven menu, double click on Deploy<br><br>make sure the user/pass is correct on the ~/.m2/settings.xml file<br>&nbsp; &nbsp; &lt;server&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;id&gt;nexus&lt;/id&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;username&gt;nexusdev&lt;/username&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;password&gt;DeVP455NexU5!&lt;/password&gt;<br>&nbsp; &nbsp; &lt;/server&gt;</p>`, 1),
    new Knowledge(27, 'Admin app new routes', 'Admin app new routes', `<p>add the correct permission on authz.ts for the admin app<br>&nbsp; &nbsp; when pushing, run:<br>&nbsp; &nbsp; &nbsp; &nbsp; sudo npm run build:prod</p>`, 1),

  ];

  constructor() {}
}
